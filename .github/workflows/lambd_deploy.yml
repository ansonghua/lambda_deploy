name: lambda deployment

on: 
  push:
    branches: [main]
    paths:
      - lambda_function/**
      - .github/workflows/**
  pull_request:
    branches: [main]
jobs:
  set-env:
    runs-on: ubuntu-latest
    steps:
    - name: Some check on branch
      id: branch_check
      run: |
        echo "Running on branch ${{ github.ref }}"
        if [ "${{ github.ref }}" = "refs/heads/main" ]; then
          echo "::set-output name=env_name::main"
        elif [ "${{ github.ref }}" = "refs/heads/dev" ]; then
          echo "::set-output name=env_name::dev"
        else
           echo "::set-output name=env_name::feature"
        fi               
    outputs:
          env_name: ${{ steps.branch_check.outputs.env_name }}
  build:
    runs-on: ubuntu-latest
    needs: [set-env]
    environment: 
      name: ${{ needs.set-env.outputs.env_name }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r lambda_function/requirements.txt
        pip install ruff
    - name: Lint with Ruff
      run: |
        ruff --format=github --select=E9,F63,F7,F82 --target-version=py39 lambda_function/*
        ruff --format=github --target-version=py39 lambda_function/*
    - name: Install aws cli
      run: |
        pip install awscliv2   
    - name: zip lambda
      run: | 
        cd lambda_function
        mkdir package
        pip install --target ./package requests
        pip install --target ./package -r requirements.txt
        cd package
        zip -r ../dep-package.zip .
        cd ..
        zip dep-package.zip lambda.py

#     - uses: hkusu/s3-upload-action@v2
#       id: upload # specify some ID for use in subsequent steps
#       with:
#         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         aws-region: 'us-east-1'
#         aws-bucket: amy-powerbi
#         file-path: './lambda_function/dep-package.zip'
#         output-qr-url: 'true' # specify true
#     - name: Show URL
#       run: echo '${{ steps.upload.outputs.qr-url }}' # use this output
  
    - name: upload zip 
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_ACCESS_KEY_SECRET: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      run: |
        aws s3 cp lambda_function/dep-package.zip s3://amy-powerbi/dep-package.zip --region us-east-1 
#     - run: aws s3 sync builddir s3://amy-powerbi --region us-east-1 --cache-control max-age=0 --acl public-read --delete
    - name: deploy lambda code
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_ACCESS_KEY_SECRET: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        aws lambda update-function-code --function-name test --region us-east-1 --zip-file fileb://${{ github.workspace }}/lambda_function/dep-package.zip
